import axios from "axios";

const axiosInstance = axios.create({
  baseURL: "", // –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –¥–æ–º–µ–Ω–∞
  timeout: 10000, // 10 —Å–µ–∫—É–Ω–¥
  headers: {
    "Content-Type": "application/json",
    Accept: "application/json",
  },
});

// üîÅ –ó–∞–ø—Ä–æ—Å—ã (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –∏ —Ç.–ø.)
axiosInstance.interceptors.request.use(
  (config) => {
    // –ü—Ä–∏–º–µ—Ä: –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    // const token = getTokenFromStorage();
    // if (token) {
    //   config.headers.Authorization = `Bearer ${token}`;
    // }

    return config;
  },
  (error) => {
    console.error("Request error:", error);
    return Promise.reject(error);
  },
);

// üõë –û—Ç–≤–µ—Ç—ã
axiosInstance.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response) {
      const { status } = error.response;

      if (status === 401) {
        console.warn(
          "–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω! –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –≤—ã–π—Ç–∏ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω.",
        );
        // –ü—Ä–∏–º–µ—Ä: logout –∏–ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç
      }

      if (status >= 500) {
        console.error("–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:", status);
      }
    } else if (error.request) {
      console.error("–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.");
    } else {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞:", error.message);
    }

    return Promise.reject(error);
  },
);

export default axiosInstance;
